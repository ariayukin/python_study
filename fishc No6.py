-3 ** 2

3 ** -2 

#and not or 
not True
not 0
not 1

3 < 4 < 5

#优先级 幂运算 < 正负号 < 算术操作符  < 比较操作符 < 罗技运算符

#测试题：

#0. Python 的 floor 除法现在使用 “//” 实现，那 3.0 // 2.0 您目测会显示什么内容呢？
 #1.0

#1. a < b < c 事实上是等于？
#(a < b) and (b < c)

#2. 不使用 IDLE，你可以轻松说出 5 ** -2 的值吗？
#0.04
#幂运算操作符比其左侧的一元操作符优先级高，比其右侧的一元操作符优先级低。

#3. 如何简单判断一个数是奇数还是偶数？
# n % 2 == 0 否则为奇数

#4. 请用最快速度说出答案：not 1 or 0 and 1 or 3 and 4 or 5 and 6 or 7 and 8 and 9
#4

#5. 还记得我们上节课那个求闰年的作业吗？如果还没有学到“求余”操作，还记得用什么方法可以“委曲求全”代替“%”的功能呢？



动动手：

0. 请写一个程序打印出 0~100 所有的奇数。
i = 100
while i >= 0:
    if i % 2 != 0:
        print (i,end=" ")
        i -= 1
    else:
        i -= 1



1. 我们说过现在的 Python 可以计算很大很大的数据，但是......真正的大数据计算可是要靠刚刚的硬件滴，不妨写一个小代码，让你的计算机为之崩溃？
print(2 ** 2 ** 32)

# 一般很多机子都会在一会儿之后：Memory Overflow，内存不够用。
# 设计到幂操作，结果都是惊人滴。


2. 爱因斯坦的难题
爱因斯坦曾出过这样一道有趣的数学题：有一个长阶梯，若每步上2阶，最后剩1阶；若每步上3阶，最后剩2阶；若每步上5阶，最后剩4阶；若每步上6阶，最后剩5阶；只有每步上7阶，最后刚好一阶也不剩。
（小甲鱼温馨提示：步子太大真的容易扯着蛋~~~）

题目：请编程求解该阶梯至少有多少阶？



3. 请写下这一节课你学习到的内容：格式不限，回忆并复述是加强记忆的好方式！